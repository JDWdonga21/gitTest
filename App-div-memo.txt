console.div
console.log

※ 코코아톡 강좌
input 테그가 제공하는 'required', 'maxlength="15" 는 input 테그가 form 테그 안에 있어야 함

JavaScript에서 구현하는 대신 할 수 있다면 HTML의 기본 속성을 최대한 이용하기

<1.js를 쓰는것도 낫벳 but
HTML에 이미 구현된 기능(인풋의 유효성검사)이 있으니 그걸 쓰자
근데 HTML에서 input의 유효성검사를 하기위해서는, 인풋이 form 태그 안에 들어가있어야 함
>따라서 div를 form으로 수정

2.근데 form 태그 안에 들어있는 button을 누르거나, type이 submit인 input을 클릭하면,(+폼안에 들어가 있는 인풋에서 엔터를 누르면?) 내가 작성한 form이 submit됨.
*이건 HTML/CSS 강의를 한번들어보고 확인해봐야할듯!!(form이 submit된다는게 무슨말????form부분만 바뀐다는건지?..)
>암튼 문제는 form이 submit되면서 내용이 날라가서 user정보를 저장할 수가 없게 됨!

3.따라서 form이 submit되어서 새로고침 되는것을 막아줄 것임!>

<
function onLoginSubmit(event){
event.preventDefault(); // 브라우저가 기본 동작을 실행하지 못하게 막기 // event object는 preventDefault함수를 기본적으로 갖고 있음
console.log(event);
}

loginForm.addEventListener("submit", onLoginSubmit); // submit 이벤트가 발생한다면, onLoginSubmit함수를 실행시킨다는 의미 // JS는 onLoginSubmit함수 호출시 인자를 담아서 호출함. 해당 인자는 event object를 담은 정보들

★ 중요 ★
form을 submit하면 브라우저는 기본적으로 페이지를 새로고침 하도록 되어있다. << 우리가 원하는 것이 아님!
preventDefault() 함수를 추가함으로써 브라우저의 기본 동작을 막을 수 있다!!

이 preventDefault 함수는 EventListener 함수의 '첫 번째 argument' 안에 있는 함수이다. 첫 arument는 지금 막 벌어진 event들에 대한 정보를 갖고 있다.
JS는(기본적으로)argument를 담아서 함수를 호출하는데, 이 argument가 기본 정보들을 제공하고 있다. ex) 누가 submit주체인지, 몇 시에 submit을 했는지 등등 콘솔에 출력해보면 알 수 있음
>
<
브라우저는 브라우저 내에서 event로부터 정보를 잡아내서 정보를 가진채 function 실행버튼을 누르는거다.
preventDefault = 어떤 event 의 기본 행동이 발생되지 않도록 막는 것.
누군가 form을 submit하면 브라우저는 기본적으로 페이지를 새로고침 하도록 되어 있다.
그래서 preventDefault function을 추가해서 그 기본 동작을 막고 있는거다.

eventListener에 어떤 function을 추가하던 JS에서는 공짜로 첫번째 argument로 발생된 event에 대한 정보를 줄거다.
필요없으면 그냥 빈칸으로 둬도 된다. 빈칸으로 두면 어떤 정보도 받지 않겠다는 뜻이다.
하지만 ()여기서 뭐라도 쓰면 JS에서 event를 채워줄거다!


addEventListener의 첫 번째 인자는 이벤트이고 이벤트와 관련된 함수에서 그 이벤트에 대한 정보를 함수의 첫 번째 인자에 저장해둔다. 그 정보 안에는 preventDefault라는 메소드가 있는데 이것은 브라우저가 submit 했을 때 새로고침이 안 되게 막는 역할 등을 한다.

addEventListener 안에 있는 함수는 직접 실행하지 않는다
브라우저가 실행시켜주고
브라우저에서 해당 이벤트에 대한 정보 즉, object를 가지게 된다.
addEventListener의 함수에서 object에 대한 자리만 할당해주면
해당 이벤트가 발생시킨 정보들에 대한 object들을 볼 수 있다!
이때 해당 이벤트가 가진 기본 Default값을 발생시키지 않기 하게 위해선 preventDefault를 이용하여 막을 수 있다!

addeventlister에 function을 주게되면, event가 일어났을때, 그 function을 JS가 실행시킴
>이때 js는 addeventlistener에 따라 단순히 function을 실행시키는 것에 더하여 그 function의 첫번째 인자로 직전에 발생된 event에 대한 정보를 object형태로 넣어줌
>또한 이과정을 통해서 발생한 첫번째 인자는 객체이고, 그 객체값중 하나로 preventDefault() 함수가 있음
>이 preventDefault()함수는 자동실행이 되는 것을 막아주므로,
>event.preventDefault()같은 식으로 코드를 작성하면, 자동실행을 막아줌
>
<
만약 addeventlistener에 사용된 함수도 argument를 받아서 사용하는 경우, 
방금 강의에서 선생님꼐서 하신것처럼 event의 정보를 담기 위한 첫번째 argument를 위한 공간을 만들어둔 후, 
두번째 argument를 활용하여 인자를 받아야 되는 건가요?

btn.addEventListener("click, (event) => fn(1,2,3))
>

<
1. string으로만 이루어진 중요하지 않은 변수는 전부 대문자로 작성
2. "Hello" + username; === `Hello ${username}`;
3. 여기서 중요한건 2번째 방법은 따옴표가 아닌 `안에 넣어 주여야함
>